{"version":3,"sources":["reducers/usersReducer.js","reducers/idReducer.js","reducers/index.js","actions/types.js","history.js","apis/jsonPlaceholder.js","actions/index.js","components/Menu.js","components/MainMenu.js","components/SubMenu.js","components/content-components/address.js","components/content-components/company.js","components/Content.js","containers/appContainer.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","users","params","menuId","submenuUser","rootReducer","combineReducers","menu","state","arguments","length","undefined","action","type","Object","objectSpread","payload","id","createBrowserHistory","axios","create","baseURL","mainMenuId","submenuAction","Menu","_ref","title","style","link","list","history","react_default","a","createElement","className","onClick","push","MainMenu","active","this","props","fetchUsers","_this2","map","user","concat","color","highlightedLink","key","name","_this$props","submenuId","class_name","_this3","handleTitleClick","components_Menu","renderStyles","renderUsers","renderTitle","Component","connect","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","wrap","_context","prev","next","json","get","sent","data","stop","_x","apply","SubMenu","_this$props2","color2","address","city","company","_this","_this$props3","renderUser","Address","street","zipcode","suite","renderAddress","Company","catchPhrase","bs","renderCompany","Content","react_router","path","component","AppContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setTimeout","localStorage","setItem","tiers","deep_link_load","firstTime","getItem","console","log","paramsAction","match","contentId","renderTiers","deepLinkLoad","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","fetch","then","response","contentType","headers","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","__webpack_require__","d","__webpack_exports__","store","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","composeEnhancers","createStore","createStoreWithMiddleware","reducers","startApp","ReactDOM","render","es","document","querySelector","cordova"],"mappings":"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","file":"static/js/main.120052d2.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  users: []\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"FETCH_USERS\":\n      return {...state, users: action.payload}\n    default:\n      return state;\n  }\n};\n","import { PARAMS_ACTION, MAIN_MENU_ID, SUBMENU_ID } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  params: '',\n  menuId: null,\n  submenuUser: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case PARAMS_ACTION:\n      return {...state, params: action.payload };\n    case MAIN_MENU_ID:\n      return {...state, menuId: action.payload -1};\n    case SUBMENU_ID:\n      return {...state, submenuUser: action.payload }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport usersReducer from './usersReducer';\nimport idReducer from './idReducer';\n\nconst rootReducer = combineReducers({\n  menu: usersReducer,\n  id: idReducer,\n});\n\nexport default rootReducer;","export const FETCH_USERS = 'FETCH_USERS';\nexport const PARAMS_ACTION = 'PARAMS_ACTION';\nexport const MAIN_MENU_ID = 'MAIN_MENU_ID';\nexport const SUBMENU_ID = 'SUBMENU_ID'","import { createBrowserHistory } from 'history'; \nexport default createBrowserHistory();","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com'\n})","import {\n    FETCH_USERS,\n    PARAMS_ACTION,\n    MAIN_MENU_ID,\n    SUBMENU_ID\n} from './types';\n\nimport json from '../apis/jsonPlaceholder';\n\n\nexport const fetchUsers = () => async dispatch => {\n    const res = await json.get('/users');\n    dispatch({ type: FETCH_USERS, payload: res.data })\n}\n\nexport const paramsAction = params => ({\n  type: PARAMS_ACTION,\n  payload: params\n})\n\nexport const mainMenuId = (id) => ({\n  type: MAIN_MENU_ID,\n  payload: id\n})\n\nexport const submenuAction = (payload) => ({\n  type: SUBMENU_ID,\n  payload\n})\n","import React from \"react\";\n\nconst Menu = ({ title, style, link, list, history }) => {\n\n  return (\n    <div className={style}>\n      <div onClick={() =>  history.push(link)}>{title}</div>\n      <div className='list-unstyled'>{list}</div>\n    </div>\n  );\n};\n\nexport default Menu;\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers, mainMenuId, submenuAction } from \"../actions\";\nimport classnames from 'classnames';\n\nimport Menu from \"./Menu\";\n\nclass MainMenu extends Component {\n\n  state={active: false}\n  // fetching users\n  componentDidMount() {\n    this.props.fetchUsers();\n  }\n\n  // rendering every user here\n  renderUsers() {\n    const { users } = this.props;  \n    return users.map(user => {\n      // This is what is helping update the redux store So then i can \n      // update the styling and the url\n      const handleClick = () => {\n        this.props.mainMenuId(user.id - 1)\n        this.props.submenuAction(null)\n        this.props.history.push(`/${user.id}`)\n      }\n      const highlightedLink = () => {\n        let color = 'text-info'; \n        if(this.props.menuId+1 === user.id) color = 'text-success'\n        return color\n      }\n  \n      return (\n        <li\n          onClick={() => handleClick()}\n          className={`menu-list ${highlightedLink()}`}\n          key={user.id}\n        >\n          {user.name}\n        </li>\n      );\n    });\n  }\n   renderStyles() {\n    const { menuId, submenuId } = this.props;\n    let class_name = 'col-12';\n    if(menuId == null && submenuId == null) class_name = \"col-12\";\n    if (menuId > -1) class_name = \"col-2\";\n    class_name += \" main-menu\";\n    return class_name;\n  }\n\n  // I had to update these as null so that in my styling I can\n  // have easy styling in renderStyle()\n  handleTitleClick() {\n    this.props.mainMenuId(null)\n    this.props.submenuAction(null)\n  }\n\n  renderTitle() {\n    return <div className=\"main-title\" onClick={() => this.handleTitleClick()}>Main Menu</div>;\n  }\n\n  render() {\n    return (\n      <Menu\n        link={`/`}\n        history={this.props.history}\n        style={this.renderStyles()}\n        list={this.renderUsers()}\n        title={this.renderTitle()}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ menu, id }) => {\n  const { users } = menu;\n  const { menuId } = id;\n  return {\n    menuId,\n    users\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchUsers, mainMenuId, submenuAction }\n)(MainMenu);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { submenuAction } from \"../actions\";\n\nimport Menu from \"./Menu\";\n\nclass SubMenu extends Component {\n  renderStyles() {\n    const { submenuUser, menuId } = this.props;\n    let class_name;\n    if (menuId) class_name = \"col-10\";\n    if (submenuUser) class_name = \"col-2\";\n    if (!submenuUser) class_name = \"col-10\";\n    class_name += \" submenu\";\n    return class_name;\n  }\n\n  // Here I had to have two individual click functions because each had its\n  //  specific set of chars that it had to go to\n  // in the future if it was an id Id only have one. could've done and if\n  // statement also\n  renderUser(user) {\n    const { history, submenuAction, submenuUser} = this.props;\n    if (user) {\n      const handleClickOne = () => {\n        submenuAction(user.address.city);\n        history.push(`/${user.id}/${user.address.city}`);\n      };\n      const handleClickTwo = () => {\n        submenuAction(user.company.name);\n        history.push(`/${user.id}/${user.company.name}`);\n      };\n      // const highlightLink = () => {\n      //   let color = 'text-info'\n      //   if(submenuUser === user.company.name) color = 'text-success'\n      //   return color;\n      // }\n      let color = 'text-info'\n      let color2 = 'text-info'\n      if(submenuUser === user.address.city) color = 'text-success'\n      if(submenuUser === user.company.name) color2 = 'text-success'\n\n      return (\n        <ul className=\"list-unstyled\">\n          <li \n          className={`submenu-list ${color}`}\n          onClick={() => handleClickOne()}>\n            {user.address.city}\n          </li>\n          <hr />\n          <li \n          className={`submenu-list ${color2}`}\n          onClick={() => handleClickTwo()}>\n            {user.company.name}\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  // I just have a whole renderTitle function so that I can pass it in as a prop to the Menu componenet\n  // There is a more efficient way though. maybe like passing it directly as the prop and doing the logic\n  // in the prop.\n  renderTitle() {\n    return (\n      <div\n        className=\"submenu-title\"\n        onClick={() => this.props.submenuAction(null)}\n      >\n        Sub-Menu\n      </div>\n    );\n  }\n\n  render() {\n    const { users, menuId } = this.props;\n    const user = users[menuId];\n    if (user) {\n      return (\n        <Menu\n          link={`/${user.id}`}\n          history={this.props.history}\n          style={this.renderStyles()}\n          title={this.renderTitle()}\n          list={this.renderUser(user)}\n        />\n      );\n    }\n    return null;\n  }\n}\n\nconst mapStateToProps = ({ menu, id }) => {\n  const { users } = menu;\n  const { menuId, submenuUser } = id;\n  return {\n    submenuUser,\n    menuId,\n    users\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { submenuAction }\n)(SubMenu);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Address extends Component {\n  renderAddress() {\n    const { users, menuId } = this.props;\n    let user = users[menuId]\n    if (user)\n      return (\n        <div>\n            <h1>{user.address.city}</h1>\n            <h3>{user.address.street}</h3>\n            <hr />\n            <h4>{user.address.zipcode}</h4>\n            <h3>{user.address.suite}</h3>\n        </div>\n      );\n  }\n  render() {\n    return (\n      <div>\n        <h1 className=\"menus\">Address</h1>\n        {this.renderAddress()}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ menu, id }) => {\n  const { users } = menu;\n  const { params, menuId } = id;\n  return {\n    menuId,\n    params,\n    users\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Address);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nclass Company extends Component {\n    renderCompany() {\n        const { users, menuId } = this.props;\n        let user = users[menuId]\n        if(user)\n          return (\n            <div>\n              <h1>{user.company.name}</h1>\n              <h5>{user.company.catchPhrase}</h5>\n              <hr />\n              <h4>{user.company.bs}</h4>\n            </div>\n          )\n      }\n\n  render() {\n    return (\n        <div>\n            <h1 className='menus'>Company</h1>\n            {this.renderCompany()}\n            <h1 className='bruh'>orer otances occur in which toil and pain can procure him some great pleasuuences, or one w</h1>\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ menu, id }) => {\n  const { users } = menu;\n  const { params, menuId } = id;\n  return {\n    menuId,\n    params,\n    users\n  };\n};\n\nexport default connect(mapStateToProps, null)(Company);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from 'react-router-dom';\n\nimport Address from './content-components/address';\nimport Company from './content-components/company';\n\n\nclass Content extends Component {\n  \n  render() {\n    const { users, menuId } = this.props;\n    const user = users[menuId]\n    if(user){\n    return (\n      <div className={`col-8 content`}>\n        <Route path={`/:submenuId/${user.address.city}`} component={Address}/>\n        <Route path={`/:submenuId/${user.company.name}`} component={Company}/>\n      </div>\n    );\n  } return null\n}\n}\nconst mapStateToProps = ({ menu, id }) => {\n  const { users } = menu;\n  const { params, submenuId, menuId } = id;\n  return {\n    menuId,\n    submenuId,\n    params,\n    users\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Content);\n","import React, { Component } from \"react\";\nimport { Router, Route } from \"react-router-dom\";\nimport history from \"../history\";\nimport { connect } from \"react-redux\";\nimport { paramsAction, mainMenuId, submenuAction } from \"../actions\";\n\nimport MainMenu from \"../components/MainMenu\";\nimport SubMenu from \"../components/SubMenu\";\nimport Content from \"../components/Content\";\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props)\n    setTimeout(() => {\n      localStorage.setItem(\"first_time\", '1')\n    }, 500)\n  }\n  \n  renderTiers() {\n    const {menuId, submenuUser} = this.props;\n    let tiers ='tier-one';\n    if(menuId > -1) tiers = 'tier-two';\n    if(submenuUser) tiers= 'tier-three'\n    return tiers;\n  }\n  \n  // deeplinkload to take care of the first loads of the page on a deep link\n  // deepLinkLoad() {\n  //   let deep_link_load;\n  //   if(this.state.first_load_complete && this.props.menuId) deep_link_load = 'deep-link-first-load'\n  //   return deep_link_load\n  // }\n   deepLinkLoad() {\n    let deep_link_load;\n    var firstTime = localStorage.getItem(\"first_time\")\n    if(this.props.menuId > -1 && !firstTime) {\n        deep_link_load = 'deep-link-first-load'\n    } return deep_link_load\n  }\n\n  render() {\n\n    console.log(localStorage)\n    // This is only for web. this is what is making it so that the redux store\n    // is updated when you hit enter on the url or if you were\n    // to share the link with somebody else it can direct you there.\n    this.props.paramsAction(this.props.match.params)\n    this.props.mainMenuId(this.props.params.submenuId)\n    this.props.submenuAction(this.props.params.contentId)\n    return (\n      <div id='app-container' className={`row text-center ${this.renderTiers()} ${this.deepLinkLoad()}`}>\n        <Router history={history}>\n          <Route path=\"/\" component={MainMenu} />\n          <Route path=\"/:submenuId\" component={SubMenu} />\n          <Route path=\"/:submenuId/:contentId\" component={Content} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ menu, id }) => {\n  const { users } = menu;\n  const { params, menuId, submenuUser } = id;\n  return {\n    submenuUser,\n    menuId,\n    params,\n    users\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { paramsAction, mainMenuId, submenuAction }\n)(AppContainer);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Router, Route } from \"react-router-dom\";\nimport reducers from \"./reducers\";\n\nimport history from \"./history\";\nimport AppContainer from './containers/appContainer';\n\n\nimport \"./style/main.scss\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst createStoreWithMiddleware = composeEnhancers(applyMiddleware(thunk))(\n  createStore\n);\nconst store =createStoreWithMiddleware(reducers) \n\nconst startApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router history={history}>\n        <div>\n          <Route path={['/:submenuId/:contentId', '/:submenuId', '/']} component={AppContainer} />\n        </div>\n      </Router>\n    </Provider>,\n    document.querySelector(\"#root\")\n  );\n  serviceWorker.register()\n};\nexport {store};\nif(window.cordova) {\n  document.addEventListener('deviceready', startApp, false);\n} else {\n  startApp();\n}"],"sourceRoot":""}